- name: Retrieve local hostname list
  set_fact:
    workers_hostname: >
      {{ hostvars | dict2items
      | selectattr('value.local_hostname', 'defined')
      | map(attribute='value.local_hostname.stdout')
      | list }}

- name: Available hostnames display
  debug:
    msg: "Available hostnames: {{ workers_hostname }}"

- name: Print group_clusters
  debug:
    msg: "group_clusters: {{ group_clusters }}"

- name: Print group_root
  debug:
    msg: "group_root: {{ group_root }}"

- name: Set topology_desc JSON string
  set_fact:
    topology_desc_json: "{{ topology_desc | to_nice_json }}"

- name: Set workers list JSON string
  set_fact:
    workers_json: "{{ workers_hostname | list }}"

- name: Save topology_desc to a file
  copy:
    content: "{{ topology_desc_json }}"
    dest: "/tmp/topology_desc.json"

- name: Upgrade pip to the latest version
  pip:
    name: pip
    state: latest
    executable: pip3

- name: Show current files in the directory
  ansible.builtin.find:
    paths: "{{ playbook_dir }}"
    recurse: yes
  register: files

- name: Print current files in the directory
  debug:
    msg: "{{ files }}"

- name: Install script dependencies
  shell: |
    pip3 install -r "{{ testbed_tmp_path }}"/utils/topology-app-deploy/requirements.txt

- name: Execute the Python script with sudo and parameters
  command: >
    /usr/bin/python3 "{{ testbed_tmp_path }}"/utils/topology-app-deploy/update_sla.py "/tmp/topology_desc.json" "{{ workers_json }}" "{{ group_clusters }}" "{{ group_root }}"
  register: result_output

- name: Read updated SLA JSON file
  slurp:
    src: /tmp/updated_sla.json
  register: slurped_file_update_sla

- name: Decode updated SLA JSON content
  set_fact:
    updated_sla: "{{ slurped_file_update_sla['content'] | b64decode | from_json }}"

- name: Debug updated SLA JSON content
  debug:
    msg: "{{ updated_sla }}"

- name: Read dict of successfully executed processes
  slurp:
    src: /tmp/run_process_dictionary.json
  register: slurped_file_success

- name: Read dict of failed executed processes
  slurp:
    src: /tmp/failed_process_dictionary.json
  register: slurped_file_failed

- name: Decode success process dictionary
  set_fact:
    worker_process_dict: "{{ slurped_file_success['content'] | b64decode | from_json }}"

- name: Decode failed process dictionary
  set_fact:
    services_fail_process_dict: "{{ slurped_file_failed['content'] | b64decode | from_json }}"
